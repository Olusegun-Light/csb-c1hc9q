{"version":3,"sources":["components/Entry.jsx","emojipedia.js","components/App.jsx","index.js"],"names":["Entry","props","className","role","aria-label","emoji","name","description","emojipedia","id","meaning","createEntry","emojiTerm","key","App","map","ReactDOM","render","document","getElementById"],"mappings":"oMAgBeA,MAdf,SAAeC,GACb,OACE,yBAAKC,UAAU,QACb,4BACE,0BAAMA,UAAU,QAAQC,KAAK,MAAMC,aAAW,gBAC3CH,EAAMI,OAET,8BAAOJ,EAAMK,OAEf,4BAAKL,EAAMM,eCaFC,EAxBI,CACjB,CACEC,GAAI,EACJJ,MAAO,eACPC,KAAM,eACNI,QACE,iJAEJ,CACED,GAAI,EACJJ,MAAO,eACPC,KAAM,2BACNI,QACE,yKAEJ,CACED,GAAI,EACJJ,MAAO,eACPC,KAAM,iCACNI,QACE,kMChBN,SAASC,EAAYC,GACnB,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAUH,GACfJ,MAAOO,EAAUP,MACjBC,KAAMM,EAAUN,KAChBC,YAAaK,EAAUF,UAgBdI,MAXf,WACE,OACE,6BACE,4BACE,6CAEF,wBAAIZ,UAAU,cAAcM,EAAWO,IAAIJ,M,OCjBjDK,EAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d63aef62.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Entry(props) {\n  return (\n    <div className=\"term\">\n      <dt>\n        <span className=\"emoji\" role=\"img\" aria-label=\"Tense Biceps\">\n          {props.emoji}\n        </span>\n        <span>{props.name}</span>\n      </dt>\n      <dd>{props.description}</dd>\n    </div>\n  );\n}\n\nexport default Entry;\n","const emojipedia = [\n  {\n    id: 1,\n    emoji: \"üí™\",\n    name: \"Tense Biceps\",\n    meaning:\n      \"‚ÄúYou can do that!‚Äù or ‚ÄúI feel strong!‚Äù Arm with tense biceps. Also used in connection with doing sports, e.g. at the gym.\"\n  },\n  {\n    id: 2,\n    emoji: \"üôè\",\n    name: \"Person With Folded Hands\",\n    meaning:\n      \"Two hands pressed together. Is currently very introverted, saying a prayer, or hoping for enlightenment. Is also used as a ‚Äúhigh five‚Äù or to say thank you.\"\n  },\n  {\n    id: 3,\n    emoji: \"ü§£\",\n    name: \"Rolling On The Floor, Laughing\",\n    meaning:\n      \"This is funny! A smiley face, rolling on the floor, laughing. The face is laughing boundlessly. The emoji version of ‚Äúrofl‚Äú. Stands for ‚Äûrolling on the floor, laughing‚Äú.\"\n  }\n];\n\nexport default emojipedia;\n","import React from \"react\";\nimport Entry from \"./Entry\";\nimport emojipedia from \"../emojipedia\";\n\nfunction createEntry(emojiTerm) {\n  return (\n    <Entry\n      key={emojiTerm.id}\n      emoji={emojiTerm.emoji}\n      name={emojiTerm.name}\n      description={emojiTerm.meaning}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <h1>\n        <span>emojipedia</span>\n      </h1>\n      <dl className=\"dictionary\">{emojipedia.map(createEntry)}</dl>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// var numbers = [3, 56, 2, 48, 5];\n\n////Map -Create a new array by doing something with each item in an array.\n// const newNumbers = numbers.map(function (x) {\n//   return x * 2;\n// });\n\n//////Filter - Create a new array by keeping the items that return true.\n// const newNumbers = numbers.filter(function(num) {\n//   return num < 10;\n// });\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n// var newNumber = numbers.reduce(function (accumulator, currentNumber) {\n//     return accumulator + currentNumber;\n// })\n\n////Find - find the first item that matches from an array.\n// const newNumber = numbers.find(function (num) {\n//   return num > 10;\n// })\n\n////FindIndex - find the index of the first item that matches.\n// const newNumber = numbers.findIndex(function (num) {\n//   return num > 10;\n// })\n"],"sourceRoot":""}